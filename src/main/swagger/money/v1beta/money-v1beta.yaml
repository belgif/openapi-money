swagger: "2.0"
info:
  title: data types for money
  version: ${project.version}-beta
paths: {}
definitions:
  EuroCentPositiveAmount:
    description: Money amount in eurocents >= 0
    type: integer # representation as EuroCent instead of Euro to avoid floating point rounding problems and need for unofficial decimal format  
    minimum: 0
  EuroCentAmount:
    description: Money amount in eurocents, also allows negative amounts.
    type: integer # representation as EuroCent instead of Euro to avoid floating point rounding problems and need for unofficial decimal format
  Iban:
    description: International Bank Account Number, as defined in ISO 13616:2007
    type: string
    pattern: "^[A-Z]{2}[0-9]{2}[A-Z0-9]{1,30}$"
    # consists of:
    #   country code (two letters - ISO 3166-1 alpha-2)
    #   two check digits
    #   up to 30 alphanumeric characters that are country-specific
  Bic:
    description: Business Identifier Code, also known as Swift Code. International identifier for financial and non-financial institutions, commonly used for international bank transfers.
    type: string
    pattern: "^[A-Z]{4}[A-Z]{2}[A-Z0-9]{2}([A-Z0-9]{3})?$"
    # consists of:
    #   institution code (4 letters)
    #   country code (2 letters - ISO 3166-1 alpha-2)
    #   location code (2 alphanumeric characters)
    #   optional branch code (3 alphanumeric characters)
  Currency:
    description: A currency represented by its ISO 4217 alpha code
    type: string
    pattern: "^[A-Z]{3}$"
    example: "EUR"
  MonetaryAmount:
    description: A monetary value
    type: object
    properties:
      value:
        "$ref": "#/definitions/Decimal"
      currency:
        "$ref": "#/definitions/Currency"
    required: [value, currency]
    example:
      value: "0.01"
      currency: "EUR"
  Decimal: # TODO: move to openapi-common. Pending validation of decimal representation https://github.com/belgif/rest-guide/issues/79
    type: string
    format: decimal # decimal is a custom format only supported in some tooling
    pattern: '^(\-|\+)?((\d+(\.\d*)?)|(\.\d+))$'  # based on BigDecimal without exponent support. At least one digit required, before or after comma
    example: "-100.234567"
    # other valid examples:  "010", "-.05", "+1", "10", "100." 